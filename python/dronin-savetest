#!/usr/bin/env python3

import argparse
import errno
import code
import struct
import time

# Insert the parent directory into the module import search path.
import os
import sys
sys.path.insert(1, os.path.dirname(sys.path[0]))

from dronin import uavo, telemetry, uavo_collection

#-------------------------------------------------------------------------------
USAGE = "%(prog)s"
DESC  = """
  Do some example updates to a flight controller.\
"""

def save_object(telem, obj):
    from dronin.uavo import UAVO_ObjectPersistence

    save_req = UAVO_ObjectPersistence._make_to_send(
            Operation = UAVO_ObjectPersistence.ENUM_Operation['Save'],
            ObjectID = obj._id,
            InstanceID = 0
    )

    telem.send_object(save_req, req_ack=True)

def set_led_color(telem, color=(255,255,255), blink_color=None, save=False):
    from dronin.uavo import UAVO_RGBLEDSettings
    if blink_color is None:
        blink_color = color

    leds = UAVO_RGBLEDSettings._make_to_send(
            RangeColorBlendSource = UAVO_RGBLEDSettings.ENUM_RangeColorBlendSource['Time- Half Second Period'], 
            RangeColorBlendMode = UAVO_RGBLEDSettings.ENUM_RangeColorBlendMode['Square'],
            AnnunciateRangeBegin = 255,
            RangeBaseColor = color,
            RangeEndColor = blink_color
    )

    telem.send_object(leds, req_ack=True)

    if save:
        save_object(telem, UAVO_RGBLEDSettings)


#-------------------------------------------------------------------------------
def main():
    tStream = telemetry.get_telemetry_by_args(service_in_iter=False)
    tStream.start_thread()
    tStream.wait_connection()

    set_led_color(tStream)
    time.sleep(2.5)
    set_led_color(tStream, blink_color=(180,180,0), save=True)
    time.sleep(2.5)
    set_led_color(tStream, color=(255,0,0), blink_color=(0,255,0))

#-------------------------------------------------------------------------------

if __name__ == "__main__":
    main()
